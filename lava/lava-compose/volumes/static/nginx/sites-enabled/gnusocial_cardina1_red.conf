# Redirect all http clients to https and serve certbot verification.
server {
    listen 80;
    listen [::]:80;
    # CHANGEME
    server_name gnusocial.cardina1.red;

    root /usr/share/nginx/html;

    location ^~ /.well-known/acme-challenge/ {
        allow all;
        # This will prevent the redirect from being executed during Certbot verification.
        break;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Serve HTTPS and HTTP2
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    # CHANGEME
    server_name gnusocial.cardina1.red;

    # proxy settings.
    include conf.d/server/reverse_proxy_common.conf;

    # https settings.
    # CHANGEME
    ssl_certificate /etc/nginx/certs/live/gnusocial.cardina1.red/fullchain.pem;
    # CHANGEME
    ssl_certificate_key /etc/nginx/certs/live/gnusocial.cardina1.red/privkey.pem;
    # CHANGEME
    ssl_trusted_certificate /etc/nginx/certs/live/gnusocial.cardina1.red/cert.pem;
    include conf.d/server/ssl_common.conf;

    location / {
        #proxy_pass http://gnusocial:3000;
        # With upstream.
        #proxy_pass http://gnusocial_backend;

        # about `ipv6=off`, see http://stackoverflow.com/a/35516395 .
        resolver 127.0.0.11 ipv6=off;
        set $gnusocial_backend "gnusocial";
        proxy_pass http://$gnusocial_backend:80;
        # redirect to https
        proxy_redirect http:// https://;
    }
}

# vim: set expandtab :
