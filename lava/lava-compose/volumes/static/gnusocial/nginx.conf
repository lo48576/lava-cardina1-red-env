daemon off;

#user www-data;
user root;
worker_processes  1;

#error_log stderr warn;
error_log stdout warn;
#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush      on;

    keepalive_timeout  65;

    gzip  on;

    server_tokens off;

    # 50 GiB.
    client_max_body_size 51200m;
    #proxy_request_buffering off;

    # See [GNUsocial on nginx and Debian 8](https://fragdev.com/blog/gnusocial-on-nginx-and-debian-8).
    server {
        listen 80;
        #listen [::]:80;
        server_name _;

        root /var/www/gnusocial;
        index index.php;

        # Send any PHP requests to PHP-FPM
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            #include fastcgi_params;
            fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        }

        location / {
            # Try fetching requests in the following order:
            # - Look for a static file at that address
            # - Look for a directory at that address
            # - Pass the address to GNUsocial to route
            try_files $uri $uri/ @gnusocial;
        }

        # Prevent any avatar images from being run by PHP
        location /avatar {
            location ~ \.php$ {return 403;}
            try_files $uri =404;
        }

        # Prevent any user-uploaded files from being run by PHP
        location /file {
            location ~ \.php$ {return 403;}
            try_files $uri =404;
        }

        # Fancy URLs
        location @gnusocial {
            rewrite ^(.*)$ /index.php?p=$1 last;
        }

        # Restrict access that is unnecessary anyway
        location ~ /\.(ht|git) {
            deny all;
        }
    }
}
